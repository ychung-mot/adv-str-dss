name: Deploy Dev Environment

on:
  push:
    branches:
    - main
    paths-ignore:
    - database/**
    - package.json
    - package-lock.json
    - CHANGELOG.md
    - .conventional-changelog.mjs
    - .release-it.json

env:
  GITHUB_REGISTRY: ghcr.io
  IMAGE_NAME_FRONTEND: ychung-dxc/cc-str-dss-frontend
  IMAGE_NAME_BACKEND: ychung-dxc/cc-str-dss-backend

jobs:
  test-backend:
    runs-on: ubuntu-22.04
    timeout-minutes: 10

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0.400'

    - uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        # Look to see if there is a cache hit for the corresponding requirements file
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget

    - name: Build
      run: |
        pwd
        dotnet build ./server/server.sln

    - name: Test
      run: dotnet test ./server/server.sln --no-build

  build-frontend:
    needs: [test-backend]
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    permissions:
      contents: read
      packages: write

    steps:
    - uses: hmarr/debug-action@a701ed95a46e6f2fb0df25e1a558c16356fae35a
    - uses: actions/checkout@96f53100ba2a5449eb71d2e6604bbcd94b9449b5

    - name: Setup Tools
      uses: ./.github/actions/setup-tools

    - name: Render style_nonce
      id: render_style_nonce
      run: echo "::set-output name=style_nonce::$(echo -n ${{ github.sha }} | base64)"

    - name: Build and Push
      uses: egose/actions/docker-build-push@04830c07edee3c552f2c5a0330a674ff0d366c66
      with:
        registry-url: ${{ env.GITHUB_REGISTRY }}
        registry-username: ychung-dxc
        registry-password: ${{ secrets.GHCR_TOKEN }}
        image-name: ${{ env.IMAGE_NAME_FRONTEND }}
        docker-context: frontend
        docker-file: frontend/Dockerfile
        docker-args: |
          generate_sourcemap=true
          style_nonce=${{ steps.render_style_nonce.outputs.style_nonce }}
        metadata-tags: |
          type=ref,event=branch
          type=sha,format=long,prefix=,suffix=

  build-backend:
    needs: [test-backend]
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    permissions:
      contents: read
      packages: write

    steps:
    - uses: hmarr/debug-action@a701ed95a46e6f2fb0df25e1a558c16356fae35a
    - uses: actions/checkout@96f53100ba2a5449eb71d2e6604bbcd94b9449b5

    - name: Setup Tools
      uses: ./.github/actions/setup-tools

    - name: Build and Push
      uses: egose/actions/docker-build-push@04830c07edee3c552f2c5a0330a674ff0d366c66
      with:
        registry-url: ${{ env.GITHUB_REGISTRY }}
        registry-username: ychung-dxc
        registry-password: ${{ secrets.GHCR_TOKEN }}
        image-name: ${{ env.IMAGE_NAME_BACKEND }}
        docker-context: server
        docker-file: server/Dockerfile
        metadata-tags: |
          type=ref,event=branch
          type=sha,format=long,prefix=,suffix=

  deploy:
    needs: [build-frontend, build-backend]
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    permissions:
      contents: read
    environment:
      name: dev
      url: https://dev-cc-str-dss.apps.advsol-ams.3j6z.p1.openshiftapps.com/

    steps:
    - uses: hmarr/debug-action@a701ed95a46e6f2fb0df25e1a558c16356fae35a
    - uses: actions/checkout@96f53100ba2a5449eb71d2e6604bbcd94b9449b5

    - name: Authenticate and set context
      uses: redhat-actions/oc-login@9b79eb6d8ec51bce42cb4e77f0a174fc80cf3cb9
      with:
        openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
        openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
        namespace: b07b69-dev
        insecure_skip_tls_verify: true

    - name: Deploy apps with Helm chart
      run: |
        make upgrade \
        NAMESPACE=b07b69-dev \
        NAME=cc-str-dss-dev \
        ENV_NAME=dev \
        IMAGE_TAG_FRONTEND=${{ github.sha }} \
        IMAGE_TAG_BACKEND=${{ github.sha }} \
      working-directory: ./helm/main
